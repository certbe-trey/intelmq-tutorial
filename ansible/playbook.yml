---
- hosts: malaga
  tasks:
   # GENERIC
   - name: create intelmq unix user
     user:
       name: intelmq
       comment: IntelMQ user
       group: intelmq
       home: /opt/intelmq
       shell: /usr/bin/bash
       # "intelmq"
       password: $6$bOYvo2a7$5dDEAH3HLvRio6rAKx45hrvVWtEVDwpMF4IE1oXeu4Y8exYVRlzS6yvAVkZt8QPBSqpMPX7km1ClyQWwqvcnu.
   - name: Setup sudoers
     copy:
       src: files/01_intelmq_tutorial
       dest: /etc/sudoers.d/01_intelmq_tutorial
       owner: root
       group: root
       mode: 0440
       validate: /usr/sbin/visudo -cf %s
   - name: provide MOTD
     copy:
       src: motd
       dest: /etc/
   - name: install packages
     package:
       name:
         - vim
         - screen
         - git
         - redis
         - jq
         - python3-pip
         - python3-requests
         - python3-redis
         - python3-dnspython
         - python3-psutil
         - python3-dateutil
         - python3-termstyle
         - python3-tz
         - python3-yaml
         - python3-cerberus
         - python3-geoip2
         - python3-psycopg2
         # for the postgresql_* ansible modules
         - python-psycopg2
         - postgresql
         - python-pkg-resources
         - libapache2-mod-php7.3
         - libapache2-mod-wsgi-py3
         - python3-bs4
         - rabbitmq-server
         - python3-pika
         - pandoc
   # INTELMQ CORE
   - name: Create directories
     file:
       path: "{{ item }}"
       state: directory
       mode: 0755
       owner: intelmq
       group: intelmq
     with_items:
       - /opt/intelmq/
       - /opt/intelmq/var/lib/bots/asn_lookup/
       - /opt/intelmq/var/lib/bots/file-output/
       - /opt/intelmq/var/lib/bots/maxmind_geoip/
       - /opt/intelmq/var/log/
       - /opt/intelmq/var/run/
       - /opt/dev_intelmq
   - name: clone IntelMQ git repository
     git:
       repo: https://github.com/certtools/intelmq.git
       dest: /opt/dev_intelmq
       version: master
     become_user: intelmq
     vars:
       # required because of become_user with an unprivileged user. see https://docs.ansible.com/ansible/latest/user_guide/become.html#id6
       ansible_ssh_pipelining: yes
   - name: install intelmq from local repository
     pip:
       name: /opt/dev_intelmq/
       editable: yes
       executable: pip3
     become: True
   - name: Setup intelmq files
     copy:
       src: "{{ item }}"
       dest: /opt/intelmq/etc/
       remote_src: yes
     with_items:
       - /opt/dev_intelmq/intelmq/etc/
       - /opt/dev_intelmq/intelmq/bots/BOTS
   - name: Setup intelmq bash completion
     copy:
       src: "/opt/dev_intelmq/contrib/bash-completion/{{ item }}"
       dest: /usr/share/bash-completion/completions/
       remote_src: yes
     with_items:
       - intelmqctl
       - intelmqdump
   # INTELMQ OPTIONAL DEPENDENCIES
   - name: Install pyasn
     pip:
       name: pyasn
       executable: pip3
     become: True
   - name: Provide local lookup database for IP address to ASN
     copy:
       src: /opt/intelmq/var/lib/bots/asn_lookup/ipasn.dat
       dest: /opt/intelmq/var/lib/bots/asn_lookup/
   - name: Provide local lookup database for IP address to Geolocation
     copy:
       src: /opt/intelmq/var/lib/bots/maxmind_geoip/GeoLite2-City.mmdb
       dest: /opt/intelmq/var/lib/bots/maxmind_geoip/
   # INTELMQ-MANAGER
   - name: clone IntelMQ Manager git repository
     git:
       repo: https://github.com/certtools/intelmq-manager.git
       dest: /home/user/intelmq-manager/
       version: master
     become_user: user
     vars:
       # required because of become_user with an unprivileged user. see https://docs.ansible.com/ansible/latest/user_guide/become.html#id6
       ansible_ssh_pipelining: yes
   - name: Link IntelMQ Manager in webroot
     file:
       src: /home/user/intelmq-manager/intelmq-manager
       dest: /var/www/html/manager
       state: link
       remote_src: yes
   - name: provide default positions configuration
     copy:
       src: positions.conf
       dest: /opt/intelmq/etc/manager/positions.conf
       owner: intelmq
       group: www-data
       mode: '0664'
   - name: provide default state file
     copy:
       src: state.json
       dest: /opt/intelmq/var/lib/state.json
   - name: Add www-data to the intelmq group
     user:
       name: www-data
       groups: intelmq
       append: yes
   - name: Set file permissions on configuration
     file:
       path: /opt/intelmq/etc/
       recurse: yes
       owner: intelmq
       group: www-data
       mode: u+rw,g+rw
   # WEBINPUT
   - name: install intelmq-webinput-csv from pip
     pip:
       name: intelmq_webinput_csv >= 0.2.0
       executable: pip3
     become: True
   - name: Enable Apache modules
     apache2_module:
       name: "{{item}}"
     with_items:
       - wsgi
       - proxy
       - proxy_http
       - rewrite
   - name: Write Apache configuration
     copy:
       src: apache.conf
       dest: /etc/apache2/sites-available/000-default.conf
   - name: Provide Webinput configuration
     copy:
       src: webinput_csv.conf
       dest: /opt/intelmq/etc/webinput_csv.conf
   - name: Restart Apache
     systemd:
       name: apache2
       state: restarted
   # POSTGRESQL
   - name: Create PostgreSQL HBA configuration
     copy:
       src: pg_hba.conf
       dest: /etc/postgresql/11/main/pg_hba.conf
   - name: Restart Apache
     systemd:
       name: postgresql
       state: restarted
   - name: Create PostgreSQL User
     postgresql_user:
       name: intelmq
       password: intelmq
       role_attr_flags: NOSUPERUSER,NOCREATEDB,NOCREATEROLE
     become_user: postgres
     vars:
       # required because of become_user with an unprivileged user. see https://docs.ansible.com/ansible/latest/user_guide/become.html#id6
       ansible_ssh_pipelining: yes
   - name: Create PostgreSQL Database
     postgresql_db:
       name: intelmq
       owner: intelmq
     become_user: postgres
     vars:
       # required because of become_user with an unprivileged user. see https://docs.ansible.com/ansible/latest/user_guide/become.html#id6
       ansible_ssh_pipelining: yes
   - name: Transfer SQL file
     copy:
       src: initdb.sql
       dest: /opt/intelmq/var/lib/bots/sql/
   - name: Create events table
     postgresql_query:
       db: intelmq
       path_to_script: /opt/intelmq/var/lib/bots/sql/initdb.sql
       login_user: intelmq
       login_password: intelmq
   # SQLITE
   - name: Move TI to SQLite converter
     copy:
       src: ti-to-sqlite-cc.py
       dest: /usr/local/bin/
       mode: '0755'
   - name: Move TI JSON database
     copy:
       src: ti-teams.json
       dest: /opt/intelmq/var/lib/bots/sql/
   - name: Execute TI to SQLite converter
     command: /usr/local/bin/ti-to-sqlite-cc.py --ti /opt/intelmq/var/lib/bots/sql/ti-teams.json /opt/intelmq/var/lib/bots/sql/ti-teams.sqlite
     args:
       creates: /opt/intelmq/var/lib/bots/sql/ti-teams.sqlite
   # FODY
   - name: install intelmq-fody-backend via pip from cert.at repository fork
     pip:
       name: git+http://github.com/certat/intelmq-fody-backend.git@staging#egg=intelmq_fody_backend
       executable: pip3
   - name: install intelmq-fody from pre-compiled archive (cert.at repository fork)
     unarchive:
       src: https://github.com/certat/intelmq-fody/releases/download/2020-01-21/intelmq-fody.tar.gz
       dest: /var/www/html/
       remote_src: yes
     become: True
   - name: Install Fody events api configuration
     copy:
       src: eventdb-serve.conf
       dest: /etc/intelmq/
   # LANDING PAGE
   - name: install landing page
     copy:
       src: landingpage.html
       dest: /var/www/html/index.html
   # RabbitMQ
   - name: Start RabbitMQ for configuration
     systemd:
       name: rabbitmq-server
       state: started
   - name: Enable RabbitMQ plugins
     copy:
       src: enabled_plugins
       dest: /etc/rabbitmq/
   - name: create RabbitMQ admin user
     command: bash -c "rabbitmqctl list_users | egrep ^admin || sudo rabbitmqctl add_user admin admin"
   - name: make RabbitMQ admin user an administrator
     command: rabbitmqctl set_user_tags admin administrator management
   - name: create RabbitMQ intelmq user
     command: bash -c "rabbitmqctl list_users | egrep ^intelmq || sudo rabbitmqctl add_user intelmq intelmq"
   - name: configure RabbitMQ intelmq user
     command: rabbitmqctl set_user_tags intelmq montoring
   - name: Stop and disable RabbitMQ
     systemd:
       name: rabbitmq-server
       state: stopped
       enabled: no
   # TUTORIAL
   - name: Clone tutorial repository
     git:
       repo: https://github.com/certtools/intelmq-tutorial.git
       dest: /home/user/intelmq-tutorial/
       version: master
     become_user: user
     vars:
       # required because of become_user with an unprivileged user. see https://docs.ansible.com/ansible/latest/user_guide/become.html#id6
       ansible_ssh_pipelining: yes
   - name: Install tutorial HTML converter
     copy:
       src: tutorial-to-html.sh
       dest: /usr/local/bin/
       mode: '0755'
   - name: Run tutorial HTML converter
     command: /usr/local/bin/tutorial-to-html.sh
   # MAIL
   - name: Install mailname
     copy:
       content: 'malaga'
       dest: /etc/mailname
   - name: Install postfix catchall
     copy:
       content: '/.*/'
       dest: /etc/postfix/catchall
   - name: Install postfix main.cf
     copy:
       src: main.cf
       dest: /etc/postfix/
   - name: reload postfix
     systemd:
       name: postfix
       state: reloaded
   - name: download rainloop
     unarchive:
       src: http://www.rainloop.net/repository/webmail/rainloop-community-latest.zip
       dest: /tmp/
       remote_src: yes
     args:
       creates: /tmp/rainloop
   - name: Create webmail directory
     file:
       path: /var/www/html/webmail/
       state: directory
   - name: install rainloop
     copy:
       src: /tmp/rainloop
       dest: /var/www/html/webmail/
       remote_src: yes
   - name: install rainloop index file
     copy:
       src: /var/www/html/webmail/rainloop/v/1.13.0/index.php.root
       dest: /var/www/html/webmail/index.php
       remote_src: yes
   - name: Install data directory
     unarchive:
       src: rainloop-data.tar.gz
       dest: /var/www/html/webmail/
   - name: Set file permissions on rainloop
     file:
       path: /var/www/html/webmail/
       recurse: yes
       owner: www-data
       group: www-data
